using EmptyMVCShop01.Models;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;

namespace EmptyMVCShop01.Controllers.Api
{
    [Route("api/[controller]")]
    //اینکه اتربیوت روت هستش
    //ای اس پی اول میره دنبال اتربیوت های روت و همه رو جمع میکنه که حواسش باشه روت رو چه جوری انجام بده
    //بعد هم میبینیم که یو ار الش با ای پی ای و اسلش و بعد اسم این کنترلر شروع میشه
    //اون کنترلر رو که میدونیم پلیس هولدر برای اسم های کنترلر هاست
    //میمونه اون ای پی ایش که اون همون ساب فولدری هستش که الان داخلشیم
    //[Route("api/search")]
    //تفاوتی با اون که اول نوشته شده نداره این بالایی
    [ApiController]
    //این اتربیوت در کنترلر های ام وی سی وجود نداره و کارش اینه که چند تا رفتار رو به ای پی ای و کنترلر اضافه کنه
    //الزامی نیست استفاده ازش و بودن نبودنش برای ما فرقی نداره
    public class SearchController : ControllerBase
        //کنترلر بیس در واقع بیس و پایه کنترلر هست که
        //ازش ارث بری میکنیم در ای پی ای همون کنترلر بیس کافیه و در ام وی سی ما از کنترلر ارث میبریم
    {
        //مثل همه کنترلر ها ما میایم و دیپندنسی اینجکشن و کانستراکتور اد میکنیم
        private readonly IPieRepository _pieRepository;

        public SearchController(IPieRepository pieRepository)
        {
            _pieRepository = pieRepository;
        }

        [HttpGet]
        //خب مشخص کنیم این اکشن متد قراره گت کنه و
        //وقتی که ریکوئست گت اومد بیاد اطلاعات همه پای هارو در قالب جیسان به ما بده
        public IActionResult GetAll()
        {
            //یک ای پی ای چهار حالت ارث بری از رفتار های ای پی ای و سرویس ها مپ و اتربیوت های رفتاری ای پی ای
            //اتربیوت های روت
            //و اطلاعات به شکل جیسون که در ای پی ای هایی که در ای اس پی هستند اطلاعاتی که کد های اکشن متد محیا میکنند به صورت 
            //اتومات حتی اگر که ما مشخص نکنیم به جیسان تبدیل میشوند چه یک ایتم چه لیستی از ایتم ها
            //کد های استاتوس مانند 200 و 404
            //برای اینکه کد های استاتوس ارسال بشن ای اس پی هلپر متد هایی دارد که از کنتذلر بیس میایند
            //اگه همه چی اوکی باشه و دیتا به درستی برگرده ما استاتوس کد 200 رو نشون میدیم که هلپر متدش می شه
            //Ok()
            //اگه دیتای اشتباهی رو پاس داد ما از هلپر متدی 
            //BadRequest() 
            //استفاده میکنیم که کد 400 بر میگردونه
            //که یعنی کلاینت توی فرستادن ریکوئست اشتباه کرده
            //که سرور بر میگرده و میگه ریکوئست هندل نشده پس کلاینت میدونه که باید دوباره ریکوئست بفرسته
            //مثلن اگه فرمی پست میشه که یکی از پراپرتی هاش جامونده
            //برای ارور 404 نات فاند هستش از هلپر متد زیر استفاده میشه
            //NotFound()
            //به این معنا هست که ریکوئستی که میفرسته کلاینت مطابقش در سرور چیزی نیست ولی ریکوئست ساختاری صحیحه
            //هلپر متد دیگه که برای بیان اینکه همه چی صحیح هست و اگر اپدیتی برقرار بوده به شکل
            //صحیح انجام شده هلپر متد نوکانتنت هستش
            //NoContent()
            //استاتوس کد 204 میده و یعنی این که ای پی ای به درستی هندل کرده درخواست و ریکوئست رو
            //این کد ها دیفالت هستن ولی همیشگی نیستن پس ای پی ای یک نفر دیگه رو
            //باید داکیومنتش رو خوند تا فهمید استاتوس کدش یعنی چه

            var allPies = _pieRepository.AllPies;
            return Ok(allPies);
            //هلپر متد اوکی خودش بر میگردونه استاتوس کد 200
            //و همچنین یک ابجک میگیره و به شکل جیسان پسش میده
        }

        //حالا اگر که ما به چنتا اکشن متد گت دار داشته باشیم چطور
        //برای اون لحاظ کاری نمیتونیم بکنیم جز اتربیوتی که ایدی هم بگیره. مثل زیر
        [HttpGet("{id}")]
        //این ای دی با ایدی که ورودی اکشن متد هست یکی هست و بهم متصل هستند
        //در همه این اتربیوت ها و اکشن متد ها دیتا بایندینگ حضور فعال داره
        public IActionResult GetById(int id) 
        {
            if(!_pieRepository.AllPies.Any(p=>p.PieId == id))
            {
                return NotFound();
            }
            else
            {
                return Ok(_pieRepository.AllPies.Where(p=>p.PieId==id));
            }
        }
        //خب حالا این جیسان هارو بر میگردونه ولی مشکل از جایی شروع میشه که
        //این پای مدلش وصل به مدل کتگوری و بعد مدل کتگوری دباره وصل هست به مدل پای
        //پس وارد لوپ بی نهایت میشه . برای حل این مشکل ما یک چیزی رو باید به پرگرام اضافه کنیم و دقیقن بعد از سرویس بیلدر اد کنترلرز
        //یا کنترلرز ویف ویو . بسته به اینکه کدوم رو داریم استفاده میکنیم
        //این سرویس باعث میشه که در کنترلر ها هنگام تبدیل دیتا به جیسان لوپ ها و سایکل ها رو ندیده بگیره

        //برای اجراش هم ما ران میکنیم و توی یو ار ال مینویسیم 
        //    .../api/search

        [HttpPost]
        public IActionResult SearchPies([FromBody]string searchQuery)
        {
            //برای نوشتن این قسمت اول بریم توی ای پای ریپوزیتوری و اضافه کنیم قسمتی رو برای سرچ

            IEnumerable<Pie> pies = new List<Pie>();

            if (!string.IsNullOrEmpty(searchQuery))
            {
                pies = _pieRepository.SearchPies(searchQuery);
            }
            else
            {
                pies = _pieRepository.AllPies;
            }
            return new JsonResult(pies);
            //این کد میگه که میخوام ریزالتم به شکل جیسان بره
            //و استاتوس کد 200 برگردونه
        }
    }
}
